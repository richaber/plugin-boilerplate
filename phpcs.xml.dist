<?xml version="1.0"?>
<ruleset name="Plugin Boilerplate Coding Standards">

  <description>Plugin Boilerplate Coding Standards</description>

  <!-- Set the memory limit. For most standard PHP configurations, this means the memory limit will temporarily be raised. Ref: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Advanced-Usage#specifying-phpini-settings -->
  <ini name="memory_limit" value="512M"/>

  <!-- Whenever possible, cache the scan results and re-use those for unchanged files on the next scan. -->
  <arg name="cache"/>

  <!-- Strip the filepaths down to the relevant bit. -->
  <arg name="basepath" value="./"/>

  <!-- Check up to 20 files simultaneously. -->
  <arg name="parallel" value="20"/>

  <!-- Use colors in output. -->
  <arg name="colors"/>

  <!-- Show sniff codes in all reports. -->
  <arg value="ps"/>

  <!-- Only sniff PHP files. -->
  <arg name="extensions" value="php"/>

  <!-- Specify UTF-8 encoding. -->
  <arg name="encoding" value="UTF-8"/>

  <!-- Don't sniff the following directories or file types. -->
  <exclude-pattern>/.git/*</exclude-pattern>
  <exclude-pattern>/.idea/*</exclude-pattern>
  <exclude-pattern>/bin/*</exclude-pattern>
  <exclude-pattern>/build/*</exclude-pattern>
  <exclude-pattern>/languages/*</exclude-pattern>
  <exclude-pattern>/node_modules/*</exclude-pattern>
  <exclude-pattern>/php-scoper/*</exclude-pattern>
  <exclude-pattern>/tests/*</exclude-pattern>
  <exclude-pattern>/dependencies/*</exclude-pattern>
  <exclude-pattern>/vendor/*</exclude-pattern>
  <exclude-pattern>/inc/vendor/*</exclude-pattern>
  <exclude-pattern>/scoper.inc.php</exclude-pattern>
  <exclude-pattern>/inc/Container/CompiledContainer.php</exclude-pattern>

  <!-- Use WordPress "Extra" Coding Standards. -->
  <rule ref="WordPress-Extra">
    <!-- Allow array short syntax. -->
    <exclude name="Generic.Arrays.DisallowShortArraySyntax" />
    <!-- Allow short prefixes. -->
    <exclude name="WordPress.NamingConventions.PrefixAllGlobals.ShortPrefixPassed"/>
  </rule>

  <!-- Use WordPress "Docs" Coding Standards. -->
  <rule ref="WordPress-Docs" />

  <!--
    Configure global prefixes/namespaces.
    https://github.com/WordPress/WordPress-Coding-Standards/wiki/Customizable-sniff-properties#naming-conventions-prefix-everything-in-the-global-namespace
  -->
  <rule ref="WordPress.NamingConventions.PrefixAllGlobals">
    <properties>
      <!-- Value: replace the function, class, and variable prefixes used. Separate multiple prefixes with a comma. -->
      <property name="prefixes" type="array" value="RichAber\PluginBoilerplate,pluginboilerplate_"/>
    </properties>
  </rule>

  <!-- The text domain to use for i18n. This should match what's listed in style.css. -->
  <rule ref="WordPress.WP.I18n">
    <properties>
      <property name="text_domain" type="array">
        <element value="plugin-boilerplate"/>
      </property>
    </properties>
  </rule>

  <!--
    Precision alignment should be fine in HTML.
    https://github.com/WordPress/WordPress-Coding-Standards/wiki/Customizable-sniff-properties#precision-alignment-exempt-certain-tokens
  -->
  <rule ref="WordPress.WhiteSpace.PrecisionAlignment">
    <properties>
      <property name="ignoreAlignmentTokens" type="array">
        <element value="T_COMMENT"/>
        <element value="T_INLINE_HTML"/>
      </property>
    </properties>
  </rule>

  <!--
    We're PSR-4 autoloading, skip the "class-whatever" naming convention.
    https://github.com/WordPress/WordPress-Coding-Standards/wiki/Customizable-sniff-properties#disregard-class-file-name-rules
  -->
  <rule ref="WordPress.Files.FileName">
    <properties>
      <property name="strict_class_file_names" value="false"/>
    </properties>
  </rule>

  <!--
    Config for WordPress deprecated sniffs.
    The minimum supported WordPress version.
    This should match what's listed in "Requires at least" in the plugin header.
    Ref: https://github.com/WordPress/WordPress-Coding-Standards/wiki/Customizable-sniff-properties#minimum-wp-version-to-check-for-usage-of-deprecated-functions-classes-and-function-parameters
  -->
  <config name="minimum_supported_wp_version" value="5.7"/>

  <!-- Use WordPress PHP Compatibility. -->
  <rule ref="PHPCompatibilityWP"/>

  <!--
    Set to the supported PHP version(s).
    The minimum should match what's listed in "Requires PHP" in the plugin header.
  -->
  <config name="testVersion" value="7.4-8.0"/>

  <!-- Ignore side effects in plugin bootstrap -->
  <rule ref="PSR1.Files.SideEffects.FoundWithSymbols">
    <exclude-pattern>./index.php</exclude-pattern>
  </rule>

  <!-- Disable line length rule. -->
  <rule ref="Generic.Files.LineLength.TooLong">
    <severity>0</severity>
  </rule>

  <!-- Disable WP Class file naming rule. -->
  <rule ref="WordPress.Files.FileName.NotHyphenatedLowercase">
    <severity>0</severity>
  </rule>

  <!-- Do not allow inline PHP lines that do not end with a semicolon. -->
  <rule ref="Squiz.PHP.EmbeddedPhp.NoSemicolon" />

</ruleset>
